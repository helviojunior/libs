//Yara Rule
// Rule to check if a PE (Windows EXE or DLL) has debug section/data
import "pe"

rule HasDebugData {
	meta: 
      author = "Helvio Junior (M4v3r1ck)"
      description = "PE Has Debug Data"
	condition:
		// MZ signature at offset 0 and ...
		uint16(0) == 0x5A4D and
		// ... PE signature at offset stored in MZ header at 0x3C
		uint32(uint32(0x3C)) == 0x00004550 and
		// ... Magic signature
		((uint16(uint32(0x3C) + 0x18) == 0x010B) or (uint16(uint32(0x3C) + 0x18) == 0x020B)) and
		(
			// ... Debug Data (32 bits)
			(
				// ... Magic signature (32 bits)
				(uint16(uint32(0x3C) + 0x18) == 0x010B) and 
				// ... Debug Directory RVA
				(uint32(uint32(0x3C) + 0x18 + 0x60 + 0x30) > 0x0) and
				// ... Debug Directory Size
				(uint32(uint32(0x3C) + 0x18 + 0x60 + 0x34) > 0x0) and
				// ... Look section data
				for any section in pe.sections : ( 
					// ... section Virtual Address
					(uint32(uint32(0x3C) + 0x18 + 0x60 + 0x30) >= section.virtual_address) and
					// ... section Virtual Address + Size 
					(uint32(uint32(0x3C) + 0x18 + 0x60 + 0x30) <= section.virtual_address + section.raw_data_size) and
					// ... debug_data->SizeOfData
					(uint32((uint32(uint32(0x3C) + 0x18 + 0x60 + 0x30) - section.virtual_address) + section.raw_data_offset + 0x10) > 0x00)
					
				)
			) or 
			// ... Debug Data (64 bits)
			(
				// ... Magic signature (64 bits)
				(uint16(uint32(0x3C) + 0x18) == 0x020B) and 
				// ... Debug Directory RVA
				(uint32(uint32(0x3C) + 0x18 + 0x70 + 0x30) > 0x0) and
				// ... Debug Directory Size
				(uint32(uint32(0x3C) + 0x18 + 0x70 + 0x34) > 0x0) and
				// ... Look section data
				for any section in pe.sections : ( 
					// ... section Virtual Address
					(uint32(uint32(0x3C) + 0x18 + 0x70 + 0x30) >= section.virtual_address) and
					// ... section Virtual Address + Size 
					(uint32(uint32(0x3C) + 0x18 + 0x70 + 0x30) <= section.virtual_address + section.raw_data_size) and
					// ... debug_data->SizeOfData
					(uint32((uint32(uint32(0x3C) + 0x18 + 0x70 + 0x30) - section.virtual_address) + section.raw_data_offset + 0x10) > 0x00)
				)
			)
		)
		
}